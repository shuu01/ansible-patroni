---
# patroni variables
patroni_pg_port: 5432
patroni_pg_archive_command: "mkdir -p ../wal_archive && cp %p ../wal_archive/%f"
patroni_pg_restore_command: "cp ../wal_archive/%f %p"
patroni_walg_archive_command: '{{ patroni_walg_path }}/wal-g wal-push %p'
patroni_walg_restore_command: '{{ patroni_walg_path }}/wal-g wal-fetch %f %p'
patroni_scope: postgres
patroni_node_name: "{{ inventory_hostname }}"

patroni_rest_username: patroni-username
patroni_rest_password: patroni-password

patroni_dcs: consul

# postgresql variables (override it with group_vars or host_vars if needed)
postgresql_install: true
postgresql_version: 11

# extensions
postgres_extensions:
- postgis-3
- cron

postgresql_apt_key_id: "ACCC4CF8"
postgresql_apt_key_url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
postgresql_apt_repository: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"

postgresql_home: /var/lib/postgresql
postgresql_bin: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
postgresql_data: "{{ postgresql_home }}/{{ postgresql_version }}/data"

postgresql_superuser_username: postgres
postgresql_superuser_password: superuser-password
postgresql_replication_username: replicator
postgresql_replication_password: "{{ postgresql_superuser_password }}"

postgresql_create_main_cluster: false

patroni_bootstrap_dcs:
  ttl: 30
  loop_wait: 10
  maximum_lag_on_failover: 1048576 # 1 megabyte in bytes
  synchronous_mode: true # create at least one sync replica

patroni_bootstrap_pg_hba:
  - { type: "host",  database: "all",         user: "all",                                   address: "0.0.0.0/0", method: "md5" }
  - { type: "host",  database: "replication", user: "{{ postgresql_replication_username }}", address: "0.0.0.0/0", method: "md5" }
  - { type: "local", database: "all",         user: "all",                                   address: "",          method: "peer" }

patroni_bootstrap_pg_parameters:
  synchronous_commit: "off"
  synchronous_standby_names: "'*'"
#  synchronous_standby_names: ""
  shared_preload_libraries: "pg_stat_statements, pg_cron"
  archive_mode: "on"
  wal_level: "replica"
  archive_command: "{{ patroni_pg_archive_command }}"
  max_wal_senders: "10"
  wal_keep_segments: "8"
  archive_timeout: "1800s"
  max_replication_slots: "5"
  hot_standby: "on"
  wal_log_hints: "on"

patroni_bootstrap_recovery_conf:
  restore_command: "{{ patroni_pg_restore_command }}"

patroni_bootstrap_initdb:
  encoding: UTF8
  locale: UTF8

patroni_pg_parameters: {}
patroni_pg_hba: []
patroni_pg_recovery_conf:
  restore_command: '{{ patroni_walg_restore_command }}'
patroni_pg_tags: {}

patroni_pg_create_replica_methods:
  basebackup:
    max-rate: "100M"
# pgbackrest:
# wal_e:

patroni_pg_listen: 0.0.0.0
patroni_pg_connect_address: "{{ ansible_default_ipv4.address }}:{{ patroni_pg_port }}"
patroni_pg_use_unix_socket: false

# etcd variables
patroni_etcd_host: ""
patroni_etcd_hosts: 127.0.0.1:2379
patroni_etcd_use_proxies: false
patroni_etcd_url: ""
patroni_etcd_proxy: ""
patroni_etcd_srv: ""
patroni_etcd_protocol: http
patroni_etcd_username: ""
patroni_etcd_password: ""
patroni_etcd_cacert: ""
patroni_etcd_cert: ""
patroni_etcd_key: ""

# consul variables
patroni_consul_host: "127.0.0.1:{{ patroni_consul_port | default(8500) }}"
patroni_consul_port: 8500
patroni_consul_url: ""
patroni_consul_scheme: http
patroni_consul_token: ""
patroni_consul_verify: ""
patroni_consul_cacert: ""
patroni_consul_cert: ""
patroni_consul_key: ""
patroni_consul_dc: ""
patroni_consul_checks: ""
patroni_consul_register_service: false
patroni_consul_service_check_interval: 5s
patroni_consul_consistency: default

# walg
patroni_walg_install: true
patroni_walg_version: 0.2.15
patroni_walg_path: /opt/wal-g
patroni_walg_s3_endpoint: https://my.s3.com
patroni_walg_s3_prefix: s3://pg_backup
patroni_walg_s3_key: ''
patroni_walg_s3_secret: ''
patroni_walg_pgdata: "{{ postgresql_data }}"
patroni_walg_cron: false

# restart
patroni_restart: false
