#{{ ansible_managed }}

name: {{ patroni_node_name }}
scope: &scope {{ patroni_scope }}

etcd:
  scope: *scope
  host: 127.0.0.1:2379
{#  hosts:
  {% for host in groups['pgsql'] %}
    - {{ hostvars[host]['ansible_host'] }}:2379
  {% endfor %} #}

restapi:
  listen: 0.0.0.0:8008
  connect_address: {{ ansible_default_ipv4.address }}:8008
  authentication:
    username: {{ patroni_rest_username }}
    password: {{ patroni_rest_password }}

bootstrap:
  dcs:
    ttl: &ttl 30
    loop_wait: &loop_wait 10
    maximum_lag_on_failover: 1048576 # 1 megabyte in bytes
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        archive_mode: "on"
        wal_level: hot_standby
        archive_command: "{{ patroni_archive_command }}"
        max_wal_senders: 10
        wal_keep_segments: 8
        archive_timeout: 1800s
        max_replication_slots: 5
        hot_standby: "on"
        wal_log_hints: "on"

  initdb:  # Note: It needs to be a list (some options need values, others are switches)
    - encoding: UTF8

  pg_hba:  # Add following lines to pg_hba.conf after running 'initdb'
    - host replication replicator 10.0.0.0/8 md5
    - host replication replicator 127.0.0.1/32 md5
    - host all all 0.0.0.0/0 md5

postgresql:
  listen: 0.0.0.0
  connect_address: {{ ansible_default_ipv4.address }}:5432
  data_dir: {{ postgresql_data }}
  bin_dir: {{ postgresql_bin }}
  #use_unix_socket:  true
  pg_rewind:
    username: superuser
    password: {{ postgresql_superuser_password }}
  pg_hba:
  - host all all 0.0.0.0/0 md5
  - host replication replicator 0.0.0.0/0 md5
  replication:
    username: replicator
    password: {{ postgresql_replicator_password }}
    network:  0.0.0.0/0
  superuser:
    username: superuser
    password: {{ postgresql_superuser_password }}
  admin:
    username: admin
    password: {{ postgresql_superuser_password }}
  restore: /opt/patroni/patroni/scripts/restore.py
